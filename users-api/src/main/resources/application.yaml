server.port: 8000

spring:
  application:
    name: users

  jackson:
    property-naming-strategy: SNAKE_CASE

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL5Dialect

  datasource:
    hiraki:
      initialization-fail-timeout: 0
    url: jdbc:mysql://root:root@${DB_URL:localhost}/users?autoReconnect=true&useSSL=false&enabledTLSProtocols=TLSv1.2

  cache:
    type: redis

  redis:
    host: ${REDIS_URL:localhost}
    port: ${REDIS_PORT:6379}

  kafka:
    bootstrap-servers: ${KAFKA_SERVER:broker}:${KAFKA_PORT:9092}
    producer:
      bootstrap: ${KAFKA_SERVER:broker}:${KAFKA_PORT:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap: ${KAFKA_SERVER:broker}:${KAFKA_PORT:9092}
      group-id: users-group-id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"

topics:
  validate-transaction: validate-transaction
  transaction-validated: transaction-validated